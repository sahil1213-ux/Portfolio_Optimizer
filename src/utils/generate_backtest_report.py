from pathlib import Path
from reportlab.lib.pagesizes import letter
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, Image
from reportlab.lib.units import inch
from reportlab.lib import colors


def generate_backtest_report(
    output_dir: Path,
    results: dict,
    backtest_path: Path
) -> Path:
    """Generate PDF report for backtesting."""
    pdf_path = output_dir / "backtest_report.pdf"
    doc = SimpleDocTemplate(str(pdf_path), pagesize=letter)
    styles = getSampleStyleSheet()
    
    # Define a custom footer style
    footer_style = styles['Normal']
    footer_style.fontSize = 8
    footer_style.textColor = colors.grey
    styles.add(ParagraphStyle(name='Footer', parent=footer_style))
    
    story = []
    
    # Title page
    story.append(Paragraph("Portfolio Backtest Report", styles['Title']))
    story.append(Spacer(1, 0.2*inch))
    
    # Backtest Performance Plot
    story.append(Paragraph("Backtest Performance", styles['Heading1']))
    story.append(Spacer(1, 0.1*inch))
    story.append(Image(str(backtest_path), width=6*inch, height=4*inch))
    story.append(Paragraph(
        "Figure 1: Historical performance of optimized portfolio vs benchmarks",
        styles['Italic']
    ))
    
    # Backtest Metrics
    story.append(Spacer(1, 0.2*inch))
    story.append(Paragraph("Backtest Metrics", styles['Heading2']))
    
    bt_data = [["Metric", "Portfolio"]]
    for bench, value in results['benchmarks'].items():
        bt_data[0].append(bench)
        bt_data.append([
            "CAGR",
            f"{results.get('CAGR', 'N/A'):.2%}",
            f"{value:.2%}"
        ])
    
    bt_data.append([
        "Sharpe Ratio",
        f"{results.get('Sharpe Ratio', 'N/A'):.2f}",
        "N/A"
    ])
    
    bt_data.append([
        "Max Drawdown",
        f"{results.get('Max Drawdown', 'N/A'):.2%}",
        "N/A"
    ])
    
    bt_table = Table(
        bt_data,
        style=[
            ('BACKGROUND', (0,0), (-1,0), colors.lightgrey),
            ('GRID', (0,0), (-1,-1), 1, colors.black)
        ]
    )
    story.append(bt_table)
    
    # Footer
    story.append(Spacer(1, 0.5*inch))
    story.append(Paragraph("Generated by Portfolio Optimizer", styles['Footer']))
    story.append(Paragraph(
        "Modern Portfolio Theory Implementation Â© 2023", 
        styles['Footer']
    ))
    
    # Build PDF
    doc.build(story)
    return pdf_path